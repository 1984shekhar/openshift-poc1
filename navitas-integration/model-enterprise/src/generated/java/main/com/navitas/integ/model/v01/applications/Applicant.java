/*
 * Navitas Partner API
 * This is a description of the Navitas Partner API and the available RESTful endpoints within. From here you can discover what 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: d.bastide@leonardo.com.au
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.navitas.integ.model.v01.applications;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.navitas.integ.model.v01.applications.Person;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/**
 * Applicant
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-07-06T15:55:24.977+10:00")
public class Applicant   {
  @JsonProperty("Person")
  private Person person = null;

  @JsonProperty("Citzenship")
  private String citzenship = null;

  @JsonProperty("CountryOfOrigin")
  private String countryOfOrigin = null;

  @JsonProperty("NextOfKin")
  private Person nextOfKin = null;

  public Applicant person(Person person) {
    this.person = person;
    return this;
  }

   /**
   * Get person
   * @return person
  **/
  @JsonProperty("Person")
  @ApiModelProperty(value = "")
  public Person getPerson() {
    return person;
  }

  public void setPerson(Person person) {
    this.person = person;
  }

  public Applicant citzenship(String citzenship) {
    this.citzenship = citzenship;
    return this;
  }

   /**
   * Get citzenship
   * @return citzenship
  **/
  @JsonProperty("Citzenship")
  @ApiModelProperty(value = "")
  public String getCitzenship() {
    return citzenship;
  }

  public void setCitzenship(String citzenship) {
    this.citzenship = citzenship;
  }

  public Applicant countryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
    return this;
  }

   /**
   * Get countryOfOrigin
   * @return countryOfOrigin
  **/
  @JsonProperty("CountryOfOrigin")
  @ApiModelProperty(value = "")
  public String getCountryOfOrigin() {
    return countryOfOrigin;
  }

  public void setCountryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
  }

  public Applicant nextOfKin(Person nextOfKin) {
    this.nextOfKin = nextOfKin;
    return this;
  }

   /**
   * Get nextOfKin
   * @return nextOfKin
  **/
  @JsonProperty("NextOfKin")
  @ApiModelProperty(value = "")
  public Person getNextOfKin() {
    return nextOfKin;
  }

  public void setNextOfKin(Person nextOfKin) {
    this.nextOfKin = nextOfKin;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Applicant applicant = (Applicant) o;
    return Objects.equals(this.person, applicant.person) &&
        Objects.equals(this.citzenship, applicant.citzenship) &&
        Objects.equals(this.countryOfOrigin, applicant.countryOfOrigin) &&
        Objects.equals(this.nextOfKin, applicant.nextOfKin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(person, citzenship, countryOfOrigin, nextOfKin);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Applicant {\n");
    
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    citzenship: ").append(toIndentedString(citzenship)).append("\n");
    sb.append("    countryOfOrigin: ").append(toIndentedString(countryOfOrigin)).append("\n");
    sb.append("    nextOfKin: ").append(toIndentedString(nextOfKin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

