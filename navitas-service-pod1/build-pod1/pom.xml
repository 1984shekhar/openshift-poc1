<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.navitas.ospoc</groupId>
        <artifactId>navitas-service-pod1</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>build-pod1</artifactId>

    <packaging>pom</packaging>

    <name>${project.artifactId}-packaging</name>
    <description>Build Pod From Features</description>

    <dependencies>
        <!-- Karaf microcontainer dependencies -->
        <dependency>
            <!-- scope is compile so all features (there is only one) are installed into startup.properties,
            and the feature repo itself is not added in etc/org.apache.karaf.features.cfg file -->
            <groupId>org.jboss.fuse</groupId>
            <artifactId>fuse-karaf-framework</artifactId>
            <type>kar</type>
            <!-- no need to download kar dependencies -->
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-karaf-features</artifactId>
            <classifier>features</classifier>
            <type>xml</type>
        </dependency>

    </dependencies>


    <build>
        <plugins>
            <!-- 2. create karaf assembly -->
            <!-- karaf-maven-plugin creates custom microservice distribution -->
            <plugin>
                <groupId>org.apache.karaf.tooling</groupId>
                <artifactId>karaf-maven-plugin</artifactId>
                <version>${karaf.plugin.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>karaf-assembly</id>
                        <goals>
                            <goal>assembly</goal>
                        </goals>
                        <phase>install</phase>
                    </execution>
                </executions>
                <configuration>
                    <!-- we are using karaf 2.4.x -->
                    <karafVersion>v24</karafVersion>
                    <useReferenceUrls>true</useReferenceUrls>
                    <archiveTarGz>false</archiveTarGz>
                    <!-- do not include build output directory -->
                    <includeBuildOutputDirectory>false</includeBuildOutputDirectory>
                    <startupFeatures>
                        <feature>karaf-framework</feature>
                        <feature>jaas</feature>
                        <feature>aries-blueprint</feature>
                        <feature>cxf-jaxrs</feature>
                        <feature>cxf-rs-description-swagger2</feature>
                        <feature>fabric8-karaf-checks</feature>
                    </startupFeatures>
                    <startupBundles>
                        <bundle>mvn:${project.groupId}/demo-customer/${project.version}</bundle>
                    </startupBundles>
                </configuration>
            </plugin>

            <!-- 3. create docker image -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric8.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>generate-resource</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>resource</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>build-image</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
