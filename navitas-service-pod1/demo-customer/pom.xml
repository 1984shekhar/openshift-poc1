<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.navitas.ospoc</groupId>
        <artifactId>navitas-service-pod1</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>demo-customer</artifactId>
    <packaging>bundle</packaging>
    <name>${project.artifactId}-bundle</name>
    <description>Karaf 2 example running a REST sevice using CXF</description>


    <dependencies>

        <!-- cxf -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxrs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-service-description</artifactId>
        </dependency>

        <!-- swagger -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-jaxrs</artifactId>
            <version>1.5.4</version>
            <optional>true</optional>
            <exclusions>
                <!-- avoid this old dependency which breaks CXF -->
                <exclusion>
                    <groupId>javax.ws.rs</groupId>
                    <artifactId>jsr311-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Karaf microcontainer dependencies -->
        <dependency>
            <!-- scope is compile so all features (there is only one) are installed into startup.properties,
            and the feature repo itself is not added in etc/org.apache.karaf.features.cfg file -->
            <groupId>org.jboss.fuse</groupId>
            <artifactId>fuse-karaf-framework</artifactId>
            <type>kar</type>
            <!-- no need to download kar dependencies -->
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-karaf-features</artifactId>
            <version>${fabric8.version}</version>
            <classifier>features</classifier>
            <type>xml</type>
        </dependency>


        <!-- testing -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-arquillian</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <defaultGoal>install</defaultGoal>

        <plugins>

            <!-- Compiler plugin enforces Java 1.8 compatibility and activates annotation processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- Need to setup the OSGi meta information here -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>${version.maven-bundle-plugin}</version>
                <extensions>true</extensions>
                <configuration>
                    <!--<buildDirectory>../navitas-service-pod1/target</buildDirectory>-->
                    <!-- ...output jar to common bundle directory so fabric8-maven-plugin can inject them from one spot into docker image -->
                    <instructions>
                        <Import-Package>
                            javax.ws.rs;version="[2,3)",
                            javax.ws.rs.core;version="[2,3)",
                            javax.ws.rs.ext;version="[2,3)",
                            javax.xml.bind.annotation,
                            org.osgi.service.blueprint,
                            io.swagger.jaxrs.config,
                            io.swagger.jaxrs.listing,
                            io.swagger.annotations,
                            org.apache.cxf.transport.http,
                            com.fasterxml.jackson.annotation,
                            com.fasterxml.jackson.core,
                            com.fasterxml.jackson.databind,
                            com.fasterxml.jackson.jaxrs.json,
                            *
                        </Import-Package>
                        <Export-Package>
                            com.navitas.ospoc
                        </Export-Package>
                    </instructions>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-java2wadl-plugin</artifactId>
                <version>${cxf.plugin.version}</version>
                <executions>
                    <execution>
                        <id>parsejavadoc</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>parsejavadoc</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>process-classes</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>java2wadl</goal>
                        </goals>
                        <configuration>
                            <classResourceNames>
                                <classResourceName>com.navitas.ospoc.CustomerService</classResourceName>
                            </classResourceNames>
                            <docProvider>org.apache.cxf.maven_plugin.javatowadl.ResourceMapJavaDocProvider</docProvider>
                            <attachWadl>false</attachWadl>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <excludes>
                        <exclude>**/*KT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- plugin goals have to be executed in order -->
            <!-- 1. install the bundle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    <execution>
                        <id>default-install</id>
                        <goals>
                            <goal>install</goal>
                        </goals>
                        <phase>install</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
