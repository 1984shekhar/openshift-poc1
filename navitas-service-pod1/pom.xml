<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.navitas.ospoc</groupId>
    <artifactId>navitas-service-pod1</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>${project.artifactId}-superpom</name>
    <description>Karaf 2 example running a REST sevice using CXF</description>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.maven-bundle-plugin>2.3.7</version.maven-bundle-plugin>

        <!-- configure the versions you want to use here -->
        <fabric8.version>2.2.170.redhat-000013</fabric8.version>
        <cxf.plugin.version>3.1.5.redhat-630254</cxf.plugin.version>
        <karaf.plugin.version>4.0.8.redhat-000029</karaf.plugin.version>

        <!-- maven plugin versions -->
        <fabric8.maven.plugin.version>3.1.80.redhat-000013</fabric8.maven.plugin.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
        <exec-maven-plugin.skip>true</exec-maven-plugin.skip>
    </properties>

    <modules>
        <module>demo-customer</module>
        <module>build-pod1</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- import fabric8 platform bom first -->
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-project-bom-fuse-karaf</artifactId>
                <version>${fabric8.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-karaf-features</artifactId>
                <version>${fabric8.version}</version>
                <classifier>features</classifier>
                <type>xml</type>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!--&lt;!&ndash; cxf &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>org.apache.cxf</groupId>-->
            <!--<artifactId>cxf-core</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>org.apache.cxf</groupId>-->
            <!--<artifactId>cxf-rt-transports-http</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>org.apache.cxf</groupId>-->
            <!--<artifactId>cxf-rt-frontend-jaxrs</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>org.apache.cxf</groupId>-->
            <!--<artifactId>cxf-rt-rs-service-description</artifactId>-->
        <!--</dependency>-->

        <!--&lt;!&ndash; swagger &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>io.swagger</groupId>-->
            <!--<artifactId>swagger-jaxrs</artifactId>-->
            <!--<version>1.5.4</version>-->
            <!--<optional>true</optional>-->
            <!--<exclusions>-->
                <!--&lt;!&ndash; avoid this old dependency which breaks CXF &ndash;&gt;-->
                <!--<exclusion>-->
                    <!--<groupId>javax.ws.rs</groupId>-->
                    <!--<artifactId>jsr311-api</artifactId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        <!--</dependency>-->

        <!-- Karaf microcontainer dependencies -->
        <!--<dependency>-->
            <!--&lt;!&ndash; scope is compile so all features (there is only one) are installed into startup.properties,-->
            <!--and the feature repo itself is not added in etc/org.apache.karaf.features.cfg file &ndash;&gt;-->
            <!--<groupId>org.jboss.fuse</groupId>-->
            <!--<artifactId>fuse-karaf-framework</artifactId>-->
            <!--<type>kar</type>-->
            <!--&lt;!&ndash; no need to download kar dependencies &ndash;&gt;-->
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<groupId>*</groupId>-->
                    <!--<artifactId>*</artifactId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        <!--</dependency>-->


        <!-- testing -->
        <!--<dependency>-->
            <!--<groupId>org.jboss.arquillian.junit</groupId>-->
            <!--<artifactId>arquillian-junit-container</artifactId>-->
            <!--<scope>test</scope>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>io.fabric8</groupId>-->
            <!--<artifactId>fabric8-arquillian</artifactId>-->
            <!--<scope>test</scope>-->
        <!--</dependency>-->

    </dependencies>


    <build>

        <!--<resources>-->
            <!--<resource>-->
                <!--<directory>navitas-service-pod1/demo-customer/src/main/resources</directory>-->
                <!--<filtering>true</filtering>-->
            <!--</resource>-->
        <!--</resources>-->
        <defaultGoal>install</defaultGoal>

        <plugins>

            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <version>${exec-maven-plugin.version}</version>
                <executions>
                    <execution><!-- Remove comments from json template -->
                        <id>json-mini-remove-comments</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${exec-maven-plugin.skip}</skip>
                    <executable>perl</executable>
                    <outputFile>${basedir}/generated/openshift/navitas-local-fis-openshift-template.json</outputFile>
                    <arguments>
                        <argument>-0777</argument>
                        <argument>-pe</argument>
                        <argument>'s!\s*/\*.*?\*/\s*!!gsm'</argument>
                        <argument>${basedir}/configuration/navitas-local-fis-openshift-template.json</argument>
                    </arguments>
                </configuration>
            </plugin>

            <!--&lt;!&ndash; Compiler plugin enforces Java 1.8 compatibility and activates annotation processors &ndash;&gt;-->
            <!--<plugin>-->
                <!--<artifactId>maven-compiler-plugin</artifactId>-->
                <!--<version>3.3</version>-->
                <!--<configuration>-->
                    <!--<source>1.8</source>-->
                    <!--<target>1.8</target>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <!--&lt;!&ndash; Need to setup the OSGi meta information here &ndash;&gt;-->
            <!--<plugin>-->
                <!--<groupId>org.apache.felix</groupId>-->
                <!--<artifactId>maven-bundle-plugin</artifactId>-->
                <!--<version>${version.maven-bundle-plugin}</version>-->
                <!--<extensions>true</extensions>-->
                <!--<configuration>-->
                    <!--<instructions>-->
                        <!--<Import-Package>-->
                            <!--javax.ws.rs;version="[2,3)",-->
                            <!--javax.ws.rs.core;version="[2,3)",-->
                            <!--javax.ws.rs.ext;version="[2,3)",-->
                            <!--javax.xml.bind.annotation,-->
                            <!--org.osgi.service.blueprint,-->
                            <!--io.swagger.jaxrs.config,-->
                            <!--io.swagger.jaxrs.listing,-->
                            <!--io.swagger.annotations,-->
                            <!--org.apache.cxf.transport.http,-->
                            <!--com.fasterxml.jackson.annotation,-->
                            <!--com.fasterxml.jackson.core,-->
                            <!--com.fasterxml.jackson.databind,-->
                            <!--com.fasterxml.jackson.jaxrs.json,-->
                            <!--*-->
                        <!--</Import-Package>-->
                        <!--<Export-Package>-->
                            <!--com.navitas.ospoc-->
                        <!--</Export-Package>-->
                    <!--</instructions>-->
                <!--</configuration>-->
            <!--</plugin>-->
            <!--<plugin>-->
                <!--<groupId>org.apache.cxf</groupId>-->
                <!--<artifactId>cxf-java2wadl-plugin</artifactId>-->
                <!--<version>${cxf.plugin.version}</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>parsejavadoc</id>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<goals>-->
                            <!--<goal>parsejavadoc</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>process-classes</id>-->
                        <!--<phase>process-classes</phase>-->
                        <!--<goals>-->
                            <!--<goal>java2wadl</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<classResourceNames>-->
                                <!--<classResourceName>com.navitas.ospoc.CustomerService</classResourceName>-->
                            <!--</classResourceNames>-->
                            <!--<docProvider>org.apache.cxf.maven_plugin.javatowadl.ResourceMapJavaDocProvider</docProvider>-->
                            <!--<attachWadl>false</attachWadl>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-surefire-plugin</artifactId>-->
                <!--<version>${maven-surefire-plugin.version}</version>-->
                <!--<inherited>true</inherited>-->
                <!--<configuration>-->
                    <!--<excludes>-->
                        <!--<exclude>**/*KT.java</exclude>-->
                    <!--</excludes>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <!--&lt;!&ndash; plugin goals have to be executed in order &ndash;&gt;-->
            <!--&lt;!&ndash; 1. install the bundle &ndash;&gt;-->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-install-plugin</artifactId>-->
                <!--<version>2.5.2</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>default-install</id>-->
                        <!--<goals>-->
                            <!--<goal>install</goal>-->
                        <!--</goals>-->
                        <!--<phase>install</phase>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!--&lt;!&ndash; 2. create karaf assembly &ndash;&gt;-->
            <!--&lt;!&ndash; karaf-maven-plugin creates custom microservice distribution &ndash;&gt;-->
            <!--<plugin>-->
                <!--<groupId>org.apache.karaf.tooling</groupId>-->
                <!--<artifactId>karaf-maven-plugin</artifactId>-->
                <!--<version>${karaf.plugin.version}</version>-->
                <!--<extensions>true</extensions>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>karaf-assembly</id>-->
                        <!--<goals>-->
                            <!--<goal>assembly</goal>-->
                        <!--</goals>-->
                        <!--<phase>install</phase>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--&lt;!&ndash; we are using karaf 2.4.x &ndash;&gt;-->
                    <!--<karafVersion>v24</karafVersion>-->
                    <!--<useReferenceUrls>true</useReferenceUrls>-->
                    <!--<archiveTarGz>false</archiveTarGz>-->
                    <!--&lt;!&ndash; do not include build output directory &ndash;&gt;-->
                    <!--<includeBuildOutputDirectory>false</includeBuildOutputDirectory>-->
                    <!--<startupFeatures>-->
                        <!--<feature>karaf-framework</feature>-->
                        <!--<feature>jaas</feature>-->
                        <!--<feature>aries-blueprint</feature>-->
                        <!--<feature>cxf-jaxrs</feature>-->
                        <!--<feature>cxf-rs-description-swagger2</feature>-->
                        <!--<feature>fabric8-karaf-checks</feature>-->
                    <!--</startupFeatures>-->
                    <!--<startupBundles>-->
                        <!--<bundle>mvn:${project.groupId}/demo-customer/${project.version}</bundle>-->
                    <!--</startupBundles>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <!--&lt;!&ndash; 3. create docker image &ndash;&gt;-->
            <!--<plugin>-->
                <!--<groupId>io.fabric8</groupId>-->
                <!--<artifactId>fabric8-maven-plugin</artifactId>-->
                <!--<version>${fabric8.maven.plugin.version}</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>generate-resource</id>-->
                        <!--<phase>generate-resources</phase>-->
                        <!--<goals>-->
                            <!--<goal>resource</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>build-image</id>-->
                        <!--<phase>install</phase>-->
                        <!--<goals>-->
                            <!--<goal>build</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
        </plugins>
    </build>
</project>
